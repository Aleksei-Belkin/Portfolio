    with first_payments as 
        (select user_id
          ,min(transaction_datetime::date) first_payment_date
        from skyeng_db.payments
        where status_name = 'success'
        group by 1),
    all_dates as
        (select distinct(class_start_datetime::date) dt
        from skyeng_db.classes
        where date_part('year', class_start_datetime) = 2016),
    all_dates_by_user as
        (select a.user_id
               ,b.dt
        from first_payments as a
            join all_dates as b
                on b.dt >= a.first_payment_date),
    payments_by_dates as
        (select user_id
               ,transaction_datetime::date payment_date
               ,sum(classes) transaction_balance_change
        from skyeng_db.payments
        where status_name = 'success'
        group by user_id, transaction_datetime::date),
    payments_by_dates_cumsum as
        (select a.*
               ,case when b.transaction_balance_change is null then 0 else b.transaction_balance_change end transaction_balance_change
               ,sum(transaction_balance_change) over (partition by a.user_id order by a.dt) transaction_balance_change_cs
        from all_dates_by_user as a
            left join payments_by_dates as b
                on a.user_id = b.user_id and a.dt = b.payment_date),
    classes_by_dates as
        (select user_id
               ,class_start_datetime::date class_date
               ,count(*)*-1 classes
        from skyeng_db.classes
        where class_type != 'trial'
            and (class_status = 'success' or class_status = 'failed_by_student')
        group by 1,2),
    classes_by_dates_dates_cumsum as
        (select a.*
               ,case when b.classes is null then 0 else b.classes end classes
               ,case when (sum(classes) over (partition by a.user_id order by a.dt)) is null then 0 else sum(classes) over (partition by a.user_id order by a.dt) end classes_cs
        from all_dates_by_user as a
            left join classes_by_dates as b
                on a.user_id = b.user_id and a.dt = b.class_date),
    balances as
        (select a.*
               ,b.classes
               ,b.classes_cs
               ,classes_cs + transaction_balance_change_cs as balance
        from payments_by_dates_cumsum a
            join classes_by_dates_dates_cumsum b
                on a.user_id = b.user_id and a.dt = b.dt)
    select dt
          ,sum(transaction_balance_change) sum_transaction_balance_change
          ,sum(transaction_balance_change_cs) sum_transaction_balance_change_cs
          ,sum(classes) sum_classes
          ,sum(classes_cs) sum_classes_cs
          ,sum(balance) sum_balance
    from balances
    group by 1
    order by 1
